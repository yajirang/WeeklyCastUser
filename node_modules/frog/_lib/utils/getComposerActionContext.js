export function getComposerActionContext(parameters) {
    const { context } = parameters;
    const { env, frameData, req, verified } = context || {};
    if (!frameData)
        throw new Error('Frame data must be present for action handlers.');
    if (!frameData.state)
        throw new Error('State must be present for composer action handler.');
    return {
        context: {
            actionData: {
                buttonIndex: 1,
                castId: frameData.castId,
                fid: frameData.fid,
                network: frameData.network,
                messageHash: frameData.messageHash,
                timestamp: frameData.timestamp,
                state: JSON.parse(decodeURIComponent(frameData.state)),
                url: frameData.url,
            },
            env,
            error: (data) => ({
                error: data,
                format: 'composerAction',
                status: 'error',
            }),
            req,
            res: (data) => ({
                data,
                format: 'composerAction',
                status: 'success',
            }),
            var: context.var,
            verified,
        },
    };
}
//# sourceMappingURL=getComposerActionContext.js.map