import type { Context as Context_hono, Input } from 'hono';
import type { FrogConstructorParameters } from '../frog-base.js';
import type { Context } from '../types/context.js';
import type { Env } from '../types/env.js';
type RequestBodyToImageContextOptions = {
    secret?: FrogConstructorParameters['secret'];
};
type RequestBodyToImageContextReturnType<env extends Env = Env, path extends string = string, input extends Input = {}, _state = env['State']> = Omit<Context<env, path, input, _state>, 'frameData' | 'verified' | 'status' | 'initialPath'>;
export declare function requestBodyToImageContext<env extends Env, path extends string, input extends Input, _state = env['State']>(c: Context_hono<env, path>, { secret }: RequestBodyToImageContextOptions): Promise<RequestBodyToImageContextReturnType<env, path, input, _state>>;
export {};
//# sourceMappingURL=requestBodyToImageContext.d.ts.map